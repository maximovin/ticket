s3:
  url: ${MINIO:http://localhost:9000}
  accessKey: fabitticket
  secretKey: fabitticket
  bucket: ticket

spring:
  cloud:
    stream:
      function:
        definition: supplier;receive
      bindings:
        supplier-out-0:
          destination: ticket-avro-topic
          producer:
            useNativeEncoding: true
        receive-in-0:
          destination: ticket-avro-topic
          consumer:
            useNativeEncoding: true
      kafka:
        binder:
          brokers: ${BROKER:localhost}
        bindings:
          supplier-out-0:
            producer:
              configuration:
                value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
                schema.registry.url: ${SCHEMA_REGISTRY:http://localhost:8081}
          receive-in-0:
            consumer:
              configuration:
                value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
                schema.registry.url: ${SCHEMA_REGISTRY:http://localhost:8081}
                specific.avro.reader: true